1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ
1.1 Мета роботи


Ця лабораторна робота присвячена створенню мобільного застосунку, який є складовою системи контролю доступу до визначених зон. У роботі буде детально описано прийняті технічні рішення, побудовано відповідні діаграми та представлено структуру системи, включаючи її взаємодію з іншими компонентами.


1.2 Моделювання програмної системи


Для того, щоб розглянути функціональність мобільного застосунку програмної системи було створено Use-Case діаграму для користувача. Усього є одна роль користувача – адміністратор локації, який має змогу отримувати аналітику відвідування конкретної локації, згенерованої моделлю штучного інтелекту.
Функціонал користувача-адміністратора було наведено на UML діаграмі прецедентів (див. А.1). Згідно до діаграми, для початку роботи користувач має авторизуватись у системі. Після успішної авторизації користувач отримує доступ та може переглядати локації. Додатково, користувач може отримувати аналітику для конкретної локації.
Також діяльність користувача та його взаємодія із різними локаціями передбачає порядок доступу до різних функцій та можливі варіант дій. Наприклад, для того щоб переглянути аналітику, користувач спочатку повинен перейти на сторінку певної локації, до якої відносяться відвідування і лише після цього може отримати аналітику про відвідування.


2 ПРОГРАМНА РЕАЛІЗАЦІЯ ЧАСТИНИ МОБІЛЬНОГО ЗАСТОСУНКУ
2.1 Архітектура програмної системи


З метою розробки компоненту мобільного додатку було застосовано мову програмування Kotlin. У процесі створення застосовано архітектурний підхід MVVM. Дизайн інтерфейсу користувача було реалізовано за допомогою сучасного інструментарію Jetpack Compose.
Проект організовано таким чином:
- Model – визначає структуру даних, що використовуються в застосунку, та їх взаємозв'язки.
- Network – забезпечує взаємодію з віддаленими серверами для отримання та відправки даних.
- Pages – містить компоненти Jetpack Compose, що формують інтерфейс користувача для різних екранів застосунку.
- Repository – виступає посередником між джерелами даних (локальні бази даних, мережа) та іншими частинами застосунку, надаючи уніфікований інтерфейс доступу до даних.
- ViewModel – зберігає та керує станом інтерфейсу користувача, забезпечуючи його зв'язок з моделлю та репозиторієм.
Мобільний застосунок спілкується з сервером Nest.JS через HTTP-запити за допомогою бібліотеки ktor-client: GET, POST, PUT, DELETE. Для демонстрації структури компонентів системи була створена UML діаграму компонентів (див. А.4).


2.2 Розробка системи


Основний функціонал системи – перегляд інформації про локації та її аналітику відвідування. Було розроблено UML діаграму станів (див. А.2) та UML діаграму діяльності (див. А.3) для демонстрації взаємодії користувача та системи.


2.2.1 Модуль NetworkModule


Модуль NetworkModule відповідає за налаштування та створення HTTP-клієнта для взаємодії з віддаленим сервером. Він використовує бібліотеку Ktor для встановлення з'єднання, обробки JSON-даних та логування запитів і відповідей (див. Б.1, рядки 10-25).


2.2.2 Модуль LocationRepository


Модуль LocationRepository призначений для взаємодії з API серверної частини з метою отримання та обробки даних про локації та її відвідування. Він реалізує інтерфейс LocationRepository, який визначає два методи: getLocations для отримання списку локацій та getLocationAnalytics для отримання аналітики по конкретній локації (див. Б.2, рядки 6-9).
У класі LocationRepositoryImpl реалізовано ці методи з використанням об'єкта LocationApi, який відповідає за безпосереднє виконання мережевих запитів (див. Б.2, рядки 11-29). У випадку виникнення помилок під час запитів, повертаються порожні значення або порожній список, а повідомлення про помилку виводиться в консоль.







2.2.3 Модуль LocationViewModel


Розроблений для отримання та керування даними про локації користувача. Використовує LocationRepository для взаємодії з сервером та отримання списку локацій, доступних користувачу (див. Б.2, рядки 12-55). Також містить функціонал для отримання аналітичних даних по конкретній локації. Обробляє помилки та стани завантаження, надаючи відповідні потоки даних для інтерфейсу користувача.


2.3 Висновки


Впродовж даної лабораторної роботи було розроблено мобільний застосунок програмної системи для контролю відвідування зон локації, описано архітектуру системи, програмну реалізацію, розроблено Use-Case діаграми, діаграми активності та взаємодії.
 
